@using Microsoft.AspNetCore.Mvc.TagHelpers
@using WallsCalculator.Models.Enums
@using WallsCalculator.Utils
@model WallsCalculator.Models.BalkCalculationInput

@{
    ViewData["Title"] = "Стена из бруса";
}


<div class="font-weight-bold h3 text-center text-secondary lightViolet py-3">
    <span>Расчет стен из бруса</span>
</div>

<div class="lineAfter">
    <a asp-controller="Home" asp-action="Index">Назад</a>
</div>


<div class="lineAfter">
    <form asp-controller="Calculator" asp-action="BalkCalculatorIndex">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row justify-content-md-center">
            <div class="col-7">
                <div class="calculatorWrapperShadow p-4 mb-4">
                    <div class="form-group">
                        <label asp-for="Perimeter" class="control-label"></label>
                        <input onkeypress="isNumber(event)" asp-for="Perimeter" class="form-control" placeholder="0 мм"/>
                        <span asp-validation-for="Perimeter" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="AngleHeight" class="control-label"></label>
                        <input onkeypress="isNumber(event)" asp-for="AngleHeight" class="form-control" placeholder="0 мм"/>
                        <span asp-validation-for="AngleHeight" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="BalkType" class="control-label"></label>
                        <select class="form-control" asp-for="BalkType">
                            @foreach (var enumAlias in Enum.GetValues(typeof(BalkType)).Cast<BalkType>())
                            {
                                var enumValue = (int) enumAlias;
                                <option value="@enumValue">@enumAlias.GetMaterialDescription(enumAlias.GetEnumDisplayName())</option>
                            }
                        </select>
                        <span asp-validation-for="BalkType" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="BalkWidth" class="control-label"></label>
                        <input onkeypress="isNumber(event)" asp-for="BalkWidth" class="form-control" placeholder="0 мм"/>
                        <span asp-validation-for="BalkWidth" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="BalkHeight" class="control-label"></label>
                        <input onkeypress="isNumber(event)" asp-for="BalkHeight" class="form-control" placeholder="0 мм"/>
                        <span asp-validation-for="BalkHeight" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="BalkLength" class="control-label"></label>
                        <input onkeypress="isNumber(event)" asp-for="BalkLength" class="form-control" placeholder="0 руб."/>
                        <span asp-validation-for="BalkLength" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Price" class="control-label"></label>
                        <input onkeypress="isNumber(event)" asp-for="Price" class="form-control" placeholder="0 руб."/>
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>
                </div>

                <div id="apertures-container" class="calculatorWrapperShadow p-4 mb-4">
                    <img class="brickTypeImg" src="~/img/wd.jpg"/>
                    <button type="button" class="btn calculatorBtnColor" onclick="addApertureInput('#apertures-container', 'aperture')">
                        Добавить проём
                    </button>
                    @{
                        await Html.RenderPartialAsync("ApertureIndex", Model?.Apertures);
                    }
                </div>

                <div id="workers-container" class="calculatorWrapperShadow p-4 mb-4">
                    <button type="button" class="btn calculatorBtnColor" onclick="addApertureInput('#workers-container', 'worker')">
                        Добавить рабочего
                    </button>
                    @{
                        await Html.RenderPartialAsync("WorkersIndex", Model?.Workers);
                    }
                </div>

                <button type="submit" class="btn calculatorBtnColor">
                    Расчитать
                </button>
            </div>
        </div>
    </form>


    @{
        if (ViewBag.IsCalculated != null)
        {
            if (ViewBag.IsCalculated)
            {
                await Html.RenderPartialAsync("BalkCalculationOutputPartial", ViewData["Result"]);
            }
            else
            {
                <div class="row justify-content-md-center m-3" id="outputResult">
                    <div class="col-7 calculatorWrapperShadow p-4">
                        <h6 class="text-danger">Во время расчета произошла ошибка, попробуйте перевести параметры.</h6>
                    </div>
                </div>
            }
        }
    }

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<div class="brickCalculator mt-5 text-secondary">
    <div class="font-weight-bold h3 text-center my-5 text-secondary text-center">Общие сведения по результатам расчетов</div>
    <div class="my-3">
        <div class="lightViolet p-3 my-4">
            Площадь кладки
            <br/>
            - Площадь внешней стороны стен и соответствует площади необходимого утеплителя.
        </div>
        <div class="lightViolet p-3 my-4">
            Площадь, которой не нужна кладка
            <br/>
            - Общая площадь всех проёмов (окон и дверей), где не нужна кладка.
        </div>
        <div class="lightViolet p-3 my-4">
            Количество выбранного типа бруса в 1 м<sup>3</sup>
            <br/>
            - Сколько брусьев в 1 м<sup>3</sup> понадобится.
        </div>
        <div class="lightViolet p-3 my-4">
            Количество брусьев необходимого для создания конструкции
            <br/>
            - Общее количество брусьев необходимых для постройки стен по заданным параметрам.
        </div>
        <div class="lightViolet p-3 my-4">
            Объем кубов бруса необходимого для создания конструкции
            <br/>
            - Необходимый объём кубов бруса.
        </div>
        <div class="lightViolet p-3 my-4">
            Стоимость кубов бруса
            <br/>
            - Стоимость кубов бруса в рублях.
        </div>
        <div class="lightViolet p-3 my-4">
            Количество рядов бруса
            <br/>
            - Необходимое количество рядов бруса.
        </div>
        <div class="lightViolet p-3 my-4">
            Общий вес конструкции
            <br/>
            - Общий вес всей конструкции.
        </div>
        <div class="lightViolet p-3 my-4">
            Стоимость найма рабочих
            <br/>
            - Стоимость найма всех работников, которые будут наняты для работы.
        </div>
    </div>
</div>