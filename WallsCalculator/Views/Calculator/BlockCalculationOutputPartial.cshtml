@using WallsCalculator.Utils
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BlockCalculationOutput

<div class="row justify-content-md-center m-3" id="outputResult">
    <div class="col-7 calculatorWrapperShadow p-4">
        <h3>Результаты расчётов стены из строительного блока</h3>
        <table class="table table-bordered">
            <tbody>
            <tr>
                <td>Общая площадь</td>
                <td>@Model.TotalArea м<sup>2</sup></td>
            </tr>
            <tr>
                <td>Площадь кладки</td>
                <td>@Model.AreaToCoverSquareM м<sup>2</sup></td>
            </tr>
            <tr>
                <td>Общая длина всех стен</td>
                <td>@Model.Input.Perimeter м</td>
            </tr>
            <tr>
                <td>Высота стен по углам</td>
                <td>@Model.Input.AngleHeight см</td>
            </tr>
            <tr>
                <td>Толщина стены</td>
                <td>@Model.WallDepthCentimeters см</td>
            </tr>
            <tr>
                <td>Общий вес конструкции</td>
                <td>@Model.ConstructionWeight кг</td>
            </tr>
            <tr>
                <td>Площадь, которой не нужна кладка</td>
                @if (Model.AreaToNotCoverSquareM > 0)
                {
                    <td>@Model.AreaToNotCoverSquareM м<sup>2</sup></td>
                }
                else
                {
                    <td>Без проемов</td>
                }
            </tr>
            <tr>
                <td>Вид блока</td>
                <td>@Model.Input.BlockType.GetMaterialDescription(@Model.Input.BlockType.GetEnumDisplayName())</td>
            </tr>
            <tr>
                <td>Вес блока</td>
                <td>@Model.Input.BlockWeight кг</td>
            </tr>
            <tr>
                <td>Количество выбранного типа блока и толщины в 1 м<sup>2</sup></td>
                <td>@Model.OneSquareBlocksAmount шт.</td>
            </tr>
            <tr>
                <td>Количество блоков необходимого для кладки</td>
                <td>@Model.TotalMaterialAmount шт. </td>
            </tr>
            <tr>
                <td>Количество блоков в колонне</td>
                <td>@Model.ColumnBlocksAmount шт.</td>
            </tr>
            <tr>
                <td>Стоимость одного блока</td>
                <td>@Model.Input.Price руб.</td>
            </tr>
            <tr>
                <td>Стоимость блоков</td>
                <td>@Model.TotalMaterialPrice руб.</td>
            </tr>
            <tr>
                <td>Толщина раствора</td>
                <td>@Model.Input.MortarValue мм</td>
            </tr>
            <tr>
                <td>Тип кладки блока</td>
                <td>@Model.Input.DepthType.GetEnumDisplayName()</td>
            </tr>
            <tr>
                <td>Тип кладки сетки</td>
                <td>@Model.Input.MasonryType.GetEnumDisplayName()</td>
            </tr>
            <tr>
                <td>Число рядов кладочной сетки</td>
                <td>@Model.MasonryGridRowsAmount шт.</td>
            </tr>
            <tr>
                <td>Площадь необходимой кладочной сетки</td>
                <td> @Model.AreaForMasonryGrid м<sup>2</sup></td>
            </tr>
            <tr>
                <td>Стоимость найма рабочих</td>
                @if (Model.AllWorkersPrice > 0)
                {
                    <td>@Model.AllWorkersPrice руб.</td>
                }
                else
                {
                    <td>Без найма</td>
                }
            </tr>
            <tr>
                <td>Итоговая стоимость работ с учетом найма работников и закупки материалов</td>
                <td>@Model.TotalMaterialAndWorkersPrice руб.</td>
            </tr>
            </tbody>
        </table>

        @{
            await Html.RenderPartialAsync("ApertureOutputPartial", @Model.Input.Apertures);
            await Html.RenderPartialAsync("WorkersOutputPartial", @Model.Input.Workers);
        }
    </div>
</div>


<form asp-controller="Calculator" asp-action="BlockGetDocument">
    <input type="hidden" asp-for="Input.DepthType" value="@Model.Input.DepthType"/>
    <input type="hidden" asp-for="Input.Perimeter" value="@Model.Input.Perimeter"/>
    <input type="hidden" asp-for="Input.Price" value="@Model.Input.Price"/>
    <input type="hidden" asp-for="Input.MortarValue" value="@Model.Input.MortarValue"/>
    <input type="hidden" asp-for="Input.AngleHeight" value="@Model.Input.AngleHeight"/>
    <input type="hidden" asp-for="Input.BlockType" value="@Model.Input.BlockType"/>
    <input type="hidden" asp-for="Input.MasonryType" value="@Model.Input.MasonryType"/>
    <input type="hidden" asp-for="Input.MasonryType" value="@Model.Input.BlockWeight"/>
    @{
        var apertures = Model?.Input.Apertures.ToArray() ?? Array.Empty<ApertureInput>();
        for (var i = 0; i < apertures.Length; i++)
        {
            <input type="hidden" asp-for="Input.Apertures[@i].ApertureType" name="Input.Apertures[@i].ApertureType" value="@apertures[i].ApertureType"/>
            <input type="hidden" asp-for="Input.Apertures[@i].Width" name="Input.Apertures[@i].Width" value="@apertures[i].Width"/>
            <input type="hidden" asp-for="Input.Apertures[@i].Height" name="Input.Apertures[@i].Height" value="@apertures[i].Height"/>
            <input type="hidden" asp-for="Input.Apertures[@i].Quantity" name="Input.Apertures[@i].Quantity" value="@apertures[i].Quantity"/>
        }

        var workers = Model?.Input.Workers.ToArray() ?? Array.Empty<WorkerInput>();
        for (var i = 0; i < workers.Length; i++)
        {
            <input type="hidden" asp-for="Input.Workers[@i].DurationInDays" name="Input.Workers[@i].DurationInDays" value="@workers[i].DurationInDays"/>
            <input type="hidden" asp-for="Input.Workers[@i].QuantityOfWorkers" name="Input.Workers[@i].QuantityOfWorkers" value="@workers[i].QuantityOfWorkers"/>
            <input type="hidden" asp-for="Input.Workers[@i].Price" name="Input.Workers[@i].Price" value="@workers[i].Price"/>
        }
    }
    <div class="row justify-content-md-center">
        <div class="col-7">
            <button type="submit" class="btn calculatorBtnColor">Получить Word</button>
        </div>
    </div>
</form>